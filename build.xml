<project name="MeaningCloud" basedir="." default="all" >
	<!-- Prevent Ant from warning about includeantruntime not being set -->
	<property name="build.sysclasspath" value="ignore" />

	<property file="build.properties" />
	<property name="plugin.name" value="MeaningCloud"/>
	<property name="plugin.version" value="2.0"/>
	<property name="version" value="1.6" />
	
	<!-- Make environment variables available -->
	<property environment="env" />

	<!-- If environment variable GATE_HOME is set, use it for
       gate.home (unless it was already set in build.properties -->
	
	<property name="gate.home" location="/home/cabad/software/GATE_Developer_8.1-SNAPSHOT-b5123" /> 
	<!--<condition property="gate.home" value="${env.GATE_HOME}">
		<isset property="env.GATE_HOME"/>
	</condition>-->


	<property name="gate.lib" location="${gate.home}/lib" />
	<property name="gate.jar" location="${gate.home}/bin/gate.jar" />
	
	
	<property name="src.dir" location="src/main/java" />
	<property name="resources.dir" location="src/main/resources" />
	<property name="classes.dir" location="bin" />
	<property name="dist.dir" location="dist" />
	<property name="package.dir" location="${dist.dir}/${plugin.name}-${plugin.version}" />
	<property name="jar.location" location="${dist.dir}/${plugin.name}-${plugin.version}.jar" />

	

	<!-- Path to compile - includes gate.jar and GATE/lib/*.jar -->
	<path id="compile.classpath">
		<pathelement location="${gate.jar}" />
		<fileset dir="${gate.lib}">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
		<fileset dir="lib">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
	</path>

	<!-- create build directory structure -->
	<target name="prepare">
		<mkdir dir="${classes.dir}" />
	</target>

	<!-- compile the source -->
	<target name="compile" depends="prepare">
		<javac classpathref="compile.classpath"
           srcdir="${src.dir}"
           destdir="${classes.dir}"
           debug="false"
           debuglevel="lines,source"
           source="${version}"
           target="${version}" />
	</target>

	

	<!-- create the JAR file -->
	<target name="jar" depends="compile" >
		<mkdir dir="${classes.dir}" />
		<jar destfile="${jar.location}"
         update="false"
         basedir="${classes.dir}" >
			<fileset dir="${resources.dir}"> 
				<include name="creole.xml" />
				<include name="MeaningCloud.png" />
			</fileset>
		</jar>
	</target>

	<!-- remove the generated .class files -->
	<target name="clean.classes" >
		<delete dir="${classes.dir}" />
	</target>

	<!-- Clean up - remove .class and .jar files -->
	<target name="clean" depends="clean.classes" >
		<delete dir="${dist.dir}" />
	</target>

	<!-- Build everything -->
	<target name="all" depends="jar" />

	<!-- Targets used by the main GATE build file:
         build: build the plugin - just calls "jar" target
         test : run the unit tests - there aren't any
         distro.prepare: remove intermediate files that shouldn't be in the
                         distribution
  -->
	<target name="build" depends="jar"> 
	   <zip destfile="${package.dir}/creole.zip">
		<zipfileset file="README.md" prefix="${plugin.name}-${plugin.version}"/>
		<zipfileset file="${resources.dir}/creole.xml" prefix="${plugin.name}-${plugin.version}" />
		<zipfileset file="${resources.dir}/MeaningCloud.png" prefix="${plugin.name}-${plugin.version}" />
		<zipfileset file="${resources.dir}/MeaningCloud.xgapp" prefix="${plugin.name}-${plugin.version}" />
		<zipfileset file="${jar.location}"  prefix="${plugin.name}-${plugin.version}" />
		<zipfileset dir="lib" prefix="${plugin.name}-${plugin.version}/lib" />
	   </zip>
           <copy file="${resources.dir}/creole.xml" tofile="${package.dir}/creole.xml"  />

	</target>

	<target name="test" />
	<target name="distro.prepare" depends="clean.classes" />
</project>
